//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LabResultMap.Queries {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LabResultMap.Queries.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --select * from [{0}]
        ///--select * from [{1}]
        ///
        ///alter table [{0}] add N int
        ///alter table [{0}] add N_Total int
        ///alter table [{0}] add Pct float
        ///
        ////************  N  *********************************/
        ///select t.Loinc, t.Result, count(1) Num
        ///into #N
        ///from [{0}] t
        ///left join [{1}] l
        ///	on t.Loinc = l.{2} and t.Result = l.{3}	
        ///group by t.Loinc, t.Result		
        ///
        ///
        ///update [{0}]
        ///set N = Num
        ///from #N
        ///where #N.Loinc = [{0}].Loinc 
        ///and #N.Result = [{0}].Result
        ///
        ///
        ////************  N_Total  *************************** [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AddColumnsToTransform {
            get {
                return ResourceManager.GetString("AddColumnsToTransform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to alter table [{0}]
        ///add Result as
        ///(
        ///	case
        ///		when General is not null 			
        ///			then &apos;Other&apos;
        ///		when {1} is not null  --Abnormal				
        ///			then &apos;Pos&apos;
        ///		when {1} is null
        ///			then &apos;Neg&apos;
        ///		else &apos;Error&apos; end
        ///).
        /// </summary>
        internal static string AddResultColumn {
            get {
                return ResourceManager.GetString("AddResultColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if object_id(&apos;{1}&apos;) is not null begin drop table {1} end;
        ///
        ///with simpleResults as (
        ///select * 
        ///from (
        ///select {2}, Result, count(1) [Count]
        ///from {0}
        ///group by {2}, Result  
        ///) as resGroup
        ///pivot 
        ///(
        ///max(Count)
        ///for [Result] in (Pos, Neg, Other, Error)
        ///) as piv
        ///)
        ///
        ///select {2}, isnull(Pos,0) [Pos], isnull(Neg,0) [Neg], isnull(Other,0) [Other], isnull(Error,0) [Error]
        ///	, (isnull(Pos,0)+isnull(Neg,0)) [Total_PosNeg]
        ///	, case 
        ///		when isnull(Pos,0) + isnull(Neg,0) = 0 then 0
        ///		else round(isnull(Pos,0)/( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AddResultTable {
            get {
                return ResourceManager.GetString("AddResultTable", resourceCulture);
            }
        }
    }
}
